{"version":3,"sources":["hoc/Layout/MainLayout/MainLayout.js","containers/Nav_Bar/Nav_Bar.js","components/ModalPanelUsers/ModalPanelUser.js","pages/Home/Home.js","store/actions/actionType.js","store/actions/task.js","components/TaskItem/TaskItem.js","store/actions/task-change.js","containers/Tasks/TasksList/TaskList.js","pages/Tasks/Tasks.js","pages/Questionnaire/Questionnaire.js","pages/Registration/Registration.js","redux/actions/actionTypes.js","redux/actions/actions.js","components/CounterPracticeReduxe/Counter.js","pages/PracticeRedux/PracticeRedux.js","App.js","reportWebVitals.js","redux/reducers/counter1.js","redux/reducers/counter2.js","store/reducers/task.js","store/rootReducer.js","index.js"],"names":["MainLayout","className","this","props","children","Component","NavBar","onActivePanelUser","btnPanelUserClasses","activePanelUser","push","to","onClick","join","axios","require","ModalPanelUser","useState","email","setEmail","password","setPassword","e","a","preventDefault","user","console","log","post","then","res","catch","err","Error","panelClasses","onSubmit","onChange","target","value","type","home","FETCH_TASKS_START","FETCH_TASKS_SUCCESS","FETCH_TASKS_ERROR","fetchTasksSuccess","tasks","connect","dispatch","onChangeTask","fieldChange","error","data","_id","title","status","liked","favorites","likedTask","setLikedTask","favoritesTask","setFavoritesTask","numberItem","classesLiked","classesFavorites","onDoubleClick","fieldKey","fieldValue","width","height","viewBox","xmlns","d","fill","state","onFetchTasks","criteria","response","forEach","item","fetchTasks","useEffect","loading","map","i","renderTasks","questionnaire","Registration","ADD","SUB","ADD_NUMBER","ADD2","add2","number","payload","Counter","style","padding","border","counter","onAsyncAdd","counter2","setTimeout","asyncAdd","counter1","onAdd","onSub","onAddNumber","addNumber","bind","App","setActivePanelUser","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","next","result","getState","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAIqBA,E,4JACjB,WACI,OACI,qBAAKC,UAAU,yBAAf,SAEI,+BACMC,KAAKC,MAAMC,iB,GANOC,a,eCEzB,SAASC,EAAT,GAAuD,IAAtCC,EAAqC,EAArCA,kBAGxBC,EAAsB,CAAC,2BAO3B,OAViE,EAAlBC,iBAO3CD,EAAoBE,KAAK,gBAIzB,sBAAKT,UAAU,UAAf,UACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMU,GAAG,IAAT,0DAEJ,sBAAKV,UAAU,YAAf,UACI,cAAC,IAAD,CAAMU,GAAG,SAAT,8DACA,cAAC,IAAD,CAAMA,GAAG,iBAAT,8DACA,cAAC,IAAD,CAAMA,GAAG,gBAAT,mFAEJ,sBACIC,QAASL,EACTN,UAAWO,EAAoBK,KAAK,KAFxC,UAII,sBAAMZ,UAAU,aAChB,qE,6BC3BVa,G,MAAQC,EAAQ,KAEP,SAASC,EAAT,GAA4C,IAAnBP,EAAkB,EAAlBA,gBAEpC,EAA0BQ,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAHsD,4CAMtD,WAAsBC,GAAtB,eAAAC,EAAA,sDAEID,EAAEE,iBAGIC,EAAO,CAACP,QAAOE,YAErBM,QAAQC,IAAIF,GAEZX,EAAMc,KACF,kBACAH,GAECI,MAAK,SAACC,GACHJ,QAAQC,IAAI,aAAcG,MAE7BC,OAAM,SAACC,GACJN,QAAQC,IAAI,IAAIM,MAAMD,OAjBlC,4CANsD,sBAsCtD,IAAIE,EAAe,CAAC,cAOpB,OAJIzB,GACAyB,EAAaxB,KAAK,gBAIlB,uBACIyB,SA/C8C,4CAgD9ClC,UAAWiC,EAAarB,KAAK,KAFjC,UAII,mBAAGZ,UAAU,eAAb,6FACA,qBAAKA,UAAU,sBAAf,SACI,uBACImC,SAzBhB,SAA4Bd,GACxBH,EAASG,EAAEe,OAAOC,QAyBNC,KAAK,WAGb,qBAAKtC,UAAU,sBAAf,SACI,uBACImC,SA1BhB,SAA+Bd,GAC3BD,EAAYC,EAAEe,OAAOC,QA0BTC,KAAK,WAGb,wBAAQtC,UAAU,kBAAlB,yC,MChEG,SAASuC,IAEpB,OACI,sBAAKvC,UAAU,YAAf,UACI,qBAAKA,UAAU,eAAf,SACI,2MAEJ,sBAAKA,UAAU,aAAf,UACI,8NACA,0DACA,+BACI,6BACI,cAAC,IAAD,CAAMA,UAAU,8BAA8BU,GAAG,SAAjD,oDAIJ,6BACI,cAAC,IAAD,CAAMV,UAAU,8BAA8BU,GAAG,iBAAjD,yE,2CCrBX8B,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAoB,oBCuB1B,SAASC,EAAkBC,GAC9B,MAAO,CACHN,KAAMG,EACNG,S,MCoFOC,kBAAQ,MANvB,SAA4BC,GACxB,MAAO,CACHC,aAAc,SAAAC,GAAW,OAAIF,GC1GV5C,ED0G8B8C,ECzGrD,uCAAO,WAAMF,GAAN,SAAAxB,EAAA,+EAEOT,IAAMc,KAAK,mBAAoBzB,GAFtC,sDAKC4C,EAMD,CACHR,KHVyB,oBGWzBW,MAR6B,EAAD,KALzB,wDAAP,wDADG,IAAoB/C,MD8GZ2C,EAzGf,SAAkB3C,GACd,MAA+CA,EAAMgD,KAAK,GAAnDC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,UAElC,EAAkCvC,mBAASsC,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEA,EAA0CzC,mBAASuC,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAa1D,EAAMgD,KAAK,GAExBW,EAAe,CAAC,aAChBC,EAAmB,CAAC,iBAU1B,OARIN,GACAK,EAAapD,KAAK,SAGlBiD,GACAI,EAAiBrD,KAAK,aAItB,qBACIsD,cAAe,WACX7D,EAAM6C,aAAa,CACf,CAACI,MAAKa,SAAU,QAASC,WAAYT,KAEzCC,GAAcD,IAElBxD,UAAU,YAPd,UAQI,+BACK4D,IAEL,sBAAM5D,UAAU,aAAhB,SACKoD,IAEL,sBAAKpD,UAAU,YAAf,UACI,+BAEQqD,EACE,uFACA,sGAGV,sBACIrD,UAAW8D,EAAiBlD,KAAK,KACjCD,QAAS,WACLT,EAAM6C,aAAa,CACf,CAACI,MAAKa,SAAU,YAAaC,WAAYP,KAE7CC,GAAkBD,IAN1B,SAUQA,EACE,qBAAKQ,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YACjCC,MAAM,6BADX,SAEM,sBACIC,EAAE,iQAEZ,qBAAKJ,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYG,KAAK,eAClDF,MAAM,6BADX,SAEM,sBAAM,YAAU,UACVC,EAAE,2fAIxB,sBACItE,UAAW6D,EAAajD,KAAK,KADjC,SAKQ4C,EACE,sBACMa,MAAM,6BACNF,OAAO,OACPC,QAAQ,YACRF,MAAM,OACNK,KAAK,UACL5D,QAAS,WACLT,EAAM6C,aAAa,CACf,CAACI,MAAKa,SAAU,QAASC,WAAYT,KAEzCC,GAAcD,IAVxB,UAaM,sBAAMc,EAAE,kBAAkBC,KAAK,SAC/B,sBAAMD,EAAE,sLAEd,sBAAKD,MAAM,6BAA6BF,OAAO,OAAOC,QAAQ,YAAYF,MAAM,OAAOK,KAAK,UAA5F,UACM,sBAAMD,EAAE,kBAAkBC,KAAK,SAC/B,sBAAMD,EAAE,0WEnDzBzB,mBAZf,SAAyB2B,GACrB,MAAO,CACH5B,MAAO4B,EAAM5B,UAIrB,SAA4BE,GACxB,MAAO,CACH2B,aAAc,SAAAC,GAAQ,OAAI5B,EHxC3B,SAAoB4B,GACvB,8CAAO,WAAM5B,GAAN,iBAAAxB,EAAA,6DACHwB,EAgBG,CACHR,KAAME,IAlBH,kBAGwB3B,IAAMc,KAAK,iBAAkB,CAAC+C,aAHtD,OAGOC,EAHP,OAKO/B,EAAQ,GAEd+B,EAASzB,KAAKN,MAAMgC,SAAQ,SAAAC,GAAI,OAAIjC,EAAMnC,KAAKoE,MAE/C/B,EAASH,EAAkBC,IAT5B,kDAWCE,GAkBoBG,EAlBK,EAAD,GAmBzB,CACHX,KAAMI,EACNO,WAhCG,kCA6BJ,IAAyBA,IA7BrB,qBAAP,sDGuCuC6B,CAAWJ,QAIvC7B,EAtCf,SAAkB3C,GAed,OAbA6E,qBAAU,WACN7E,EAAMuE,aAAa,SACpB,IAYC,oBAAIzE,UAAU,YAAd,SAEQE,EAAM0C,MAAMoC,QACV,yCAbM,WAChB,IAAK9E,EAAM8E,QAEP,OAAO9E,EAAM0C,MAAMA,MAAMqC,KAAI,SAACJ,EAAMK,GAChC,OAAO,cAAC,EAAD,CAAyBhC,KAAM,CAAC2B,EAAMK,EAAI,IAA3BL,EAAK1B,QAUzBgC,QCtBH,SAASvC,IACpB,OACI,qBAAK5C,UAAU,sBAAf,SACI,cAAC,EAAD,M,MCPG,SAASoF,IACpB,OACI,8BACI,iDCLG,SAASC,IAEpB,OACI,0CCJD,IAAMC,EAAM,MACNC,EAAM,MACNC,EAAa,aACbC,EAAO,OCoBb,SAASC,EAAKC,GACjB,MAAO,CACHrD,KAAMmD,EACNG,QAASD,G,ICrBXE,E,4JACF,WAAU,IAAD,OACL,OACI,sBAAKC,MAAO,CAACC,QAAS,GAAIC,OAAQ,kBAAlC,UACI,0CAAa/F,KAAKC,MAAM+F,WACxB,uBACA,gCACI,wBACItF,QAAS,kBAAM,EAAKT,MAAMiC,SAAS,IADvC,iBAKA,wBACIxB,QAAS,kBAAM,EAAKT,MAAMiC,UAAU,IADxC,oBAQJ,8BACI,wBACIxB,QAAS,kBAAM,EAAKT,MAAMgG,WAAW,MADzC,8I,GArBE9F,aA8CPyC,mBAbf,SAAyB2B,GACrB,MAAO,CACHyB,QAASzB,EAAM2B,SAASA,aAIhC,SAA4BrD,GACxB,MAAO,CACHX,SAAU,SAAAwD,GAAM,OAAI7C,EAAS4C,EAAKC,KAClCO,WAAY,SAAAP,GAAM,OAAI7C,EDjBvB,SAAkB6C,GACrB,OAAO,SAAC7C,GACJsD,YAAW,WACPtD,EAAS4C,EAAKC,MACf,MCa4BU,CAASV,QAIjC9C,CAA6CgD,GCS7ChD,mBAtDf,SAAyB2B,GACrB,MAAO,CACHyB,QAASzB,EAAM8B,SAASL,YAIhC,SAA4BnD,GACxB,MAAO,CAIHyD,MAAO,kBAAMzD,EFZV,CACHR,KAAMgD,KEYNkB,MAAO,kBAAM1D,EFPV,CACHR,KAAMiD,KEONkB,YAAa,SAAAd,GAAM,OAAI7C,EFHxB,SAAmB6C,GACtB,MAAO,CACHrD,KAAMkD,EACNI,QAASD,GEAuBe,CAAUf,QAyCnC9C,EApCf,SAAuB3C,GAEnB,OACI,sBAAKF,UAAU,sBAAf,UACI,8EAAcE,EAAM+F,WACpB,uBACA,sBAAKjG,UAAU,UAAf,UACI,wBACIW,QAAST,EAAMqG,MADnB,gEAKA,wBACI5F,QAAST,EAAMsG,MADnB,6DAMJ,sBAAKxG,UAAU,UAAf,UACI,wBACIW,QAAST,EAAMuG,YAAYE,KAAK1G,KAAM,IAD1C,iEAKA,wBACIU,QAAS,kBAAMT,EAAMuG,aAAa,KADtC,8DAOJ,cAAC,EAAD,UCMGG,MAxCf,WAGI,MAA8C5F,oBAAS,GAAvD,mBAAOR,EAAP,KAAwBqG,EAAxB,KAMA,OACI,eAAC,EAAD,WACI,cAACxG,EAAD,CACIC,kBAPZ,WACIuG,GAAoBrG,IAOZA,gBAAiBA,IAErB,cAAC,EAAD,CACIA,gBAAiBA,IAGrB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC1B,EAAD,MAEJ,cAAC,IAAD,CAAO0B,KAAK,iBAAZ,SACI,cAAC,EAAD,aC1CLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtF,MAAK,YAAkD,IAA/CuF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCLRO,EAAe,CACjBvB,QAAS,GCDb,IAAMuB,EAAe,CACjBrB,SAAU,K,YCIRqB,EAAe,CACjB5E,MAAO,GACPoC,SAAS,EACT/B,MAAO,MCDIwE,kBAAiB,CAC5B7E,MDGW,WAAmD,IAA/B4B,EAA8B,uDAAtBgD,EAAcE,EAAQ,uCAC7D,OAAQA,EAAOpF,MACX,KAAKE,EACD,MAAO,CACHI,MAAO4B,EAAOQ,SAAS,GAE/B,KAAKvC,EACD,MAAO,CACHG,MAAM,YAAK8E,EAAO9E,OAAQoC,SAAS,GAE3C,KAAKtC,EACD,MAAO,CACHE,MAAM,YAAK4B,GAAQQ,SAAS,EAAO/B,MAAOyE,EAAOzE,OAEzD,QACI,OAAOuB,ICjBf8B,SHLW,WAAiD,IAA/B9B,EAA8B,uDAAtBgD,EAAcE,EAAQ,uCAC3D,OAAOA,EAAOpF,MACV,KAAKgD,EACD,MAAO,CACHW,QAASzB,EAAMyB,QAAU,GAEjC,KAAKV,EACD,MAAO,CACHU,QAASzB,EAAMyB,QAAU,GAEjC,KAAKT,EACD,MAAO,CACHS,QAASzB,EAAMyB,QAAUyB,EAAO9B,SAM5C,OAAOpB,GGZP2B,SFNW,WAAiD,IAA/B3B,EAA8B,uDAAtBgD,EAAcE,EAAQ,uCAC3D,OAAOA,EAAOpF,MACV,KAAKmD,EACD,MAAO,CACHU,SAAU3B,EAAM2B,SAAWuB,EAAO9B,SAU1C,QACI,OAAOpB,EAGf,OAAOA,KGELmD,EACgB,kBAAXC,QACPA,OAAOC,qCACHD,OAAOC,qCAAqC,IAEvCC,IAcPC,EAAQC,YAAYC,EAAaN,EAAiBO,aAX/B,SAAAH,GAAK,OAAI,SAAAI,GAAI,OAAI,SAAAT,GACtC,IAAMU,EAASD,EAAKT,GAEpB,OADAjG,QAAQC,IAAI,aAAcqG,EAAMM,YACzBD,MAUPE,OAGJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZW,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.cd1d1859.chunk.js","sourcesContent":["import './MainLayout.scss'\n\nimport {Component} from \"react\";\n\nexport default class MainLayout extends Component{\n    render() {\n        return (\n            <div className=\"main-layout__container\">\n\n                <main>\n                    { this.props.children }\n                </main>\n            </div>\n        )\n    }\n}\n","// Импорт стилей\nimport './Nav_Bar.scss'\n\nimport { Link } from \"react-router-dom\";\n\n// Компонент Навигационной панели в верхней части страницы\nexport default function NavBar({onActivePanelUser, activePanelUser}) {\n\n    // Переменная с классами от кнопки на панели навигации для активации модального окна\n    let btnPanelUserClasses = ['nav-bar__user-panel-btn']\n\n    // Если сотояние activePanelAccount === true, добовлять класс active-panel\n    if (activePanelUser) {\n        btnPanelUserClasses.push('active-panel')\n    }\n\n    return (\n        <div className=\"nav-bar\">\n            <div className=\"home-link\">\n                <Link to=\"/\">Главная</Link>\n            </div>\n            <div className=\"list-link\">\n                <Link to=\"/tasks\" >Задачник</Link>\n                <Link to=\"/questionnaire\">Опросник</Link>\n                <Link to=\"/registration\">Регистрация</Link>\n            </div>\n            <div\n                onClick={onActivePanelUser}\n                className={btnPanelUserClasses.join(' ')}\n            >\n                <span className=\"triangle\"></span>\n                <p>Войти</p>\n            </div>\n        </div>\n    )\n}","// style\nimport './ModalPanelUser.scss'\nimport {useState} from \"react\";\n\nconst axios = require('axios')\n\nexport default function ModalPanelUser({activePanelUser}) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // Функция входа в личныйкабинет\n    async function signIn(e) {\n        // Отмена стандартного поведения браузера\n        e.preventDefault()\n\n        // Данные из формы\n        const user = {email, password}\n\n        console.log(user)\n\n        axios.post(\n            '/api/auth/login',\n            user\n        )\n            .then((res) => {\n                console.log('response: ', res)\n            })\n            .catch((err) => {\n                console.log(new Error(err))\n            })\n    }\n\n    // Добовляение в state email\n    function onEmailValueChange(e) {\n        setEmail(e.target.value)\n    }\n\n    // Добовление в state password\n    function onPasswordValueChange(e) {\n        setPassword(e.target.value)\n    }\n\n    // Массив с классами для панели пользователя\n    let panelClasses = [\"modal-user\"]\n\n    // Если состояние activePanelUser=true, тогда добовляем новый класс в массив\n    if (activePanelUser) {\n        panelClasses.push('modal-active')\n    }\n\n    return (\n        <form\n            onSubmit={signIn}\n            className={panelClasses.join(\" \")}\n        >\n            <p className=\"modal-header\">Личный кабинет</p>\n            <div className=\"modal__block-inputs\">\n                <input\n                    onChange={onEmailValueChange}\n                    type=\"text\"\n                />\n            </div>\n            <div className=\"modal__block-inputs\">\n                <input\n                    onChange={onPasswordValueChange}\n                    type=\"text\"\n                />\n            </div>\n            <button className=\"btn btn-rounded\">\n                Вход\n            </button>\n        </form>\n    )\n}\n","import './Home.scss'\n\nimport { Link } from \"react-router-dom\";\n\n// Страница Home\nexport default function home() {\n\n    return (\n        <div className=\"home-page\">\n            <div className=\"home__header\">\n                <h2>Fullstack приложение, написанное на React/Express/MongoDB</h2>\n            </div>\n            <div className=\"list__link\">\n                <p>Приложения для демонстрации работы</p>\n                <p>React - Express - MongoDB</p>\n                <ul>\n                    <li>\n                        <Link className=\"btn btn-rounded btn-success\" to=\"/tasks\">\n                            Задачи\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className=\"btn btn-rounded btn-success\" to=\"/questionnaire\">\n                            Опросник\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n","//\nexport const FETCH_TASKS_START = 'FETCH_TASKS_START'\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS'\nexport const FETCH_TASKS_ERROR = 'FETCH_TASKS_ERROR'\nexport const CHANGE_TASK = 'CHANGE_TASK'\nexport const CHANGE_TASK_SUCCESS = 'CHANGE_TASK_SUCCESS'\nexport const CHANGE_TASK_ERROR = 'CHANGE_TASK_ERROR'\n\n","import axios from 'axios'\nimport {FETCH_TASKS_ERROR, FETCH_TASKS_START, FETCH_TASKS_SUCCESS} from \"./actionType\";\n\nexport function fetchTasks(criteria) {\n    return async dispatch => {\n        dispatch(fetchTasksStart())\n        try {\n            const response = await axios.post('/api/task-find', {criteria})\n\n            const tasks = []\n\n            response.data.tasks.forEach(item => tasks.push(item))\n\n            dispatch(fetchTasksSuccess(tasks))\n        } catch (err) {\n            dispatch(fetchTasksError(err))\n        }\n    }\n}\n\nexport function fetchTasksStart() {\n    return {\n        type: FETCH_TASKS_START\n    }\n}\n\nexport function fetchTasksSuccess(tasks) {\n    return {\n        type: FETCH_TASKS_SUCCESS,\n        tasks\n    }\n}\n\nexport function fetchTasksError(error) {\n    return {\n        type: FETCH_TASKS_ERROR,\n        error\n    }\n}\n","// Импорт стилей\nimport './TaskItem.scss'\n\nimport {connect} from \"react-redux\"\nimport {changeTask} from \"../../store/actions/task-change\"\n\nimport {useState} from \"react\"\n\nfunction TaskItem(props) {\n    const {_id, title, status, liked, favorites} = props.data[0]\n\n    const [likedTask, setLikedTask] = useState(liked)\n\n    const [favoritesTask, setFavoritesTask] = useState(favorites)\n\n    const numberItem = props.data[1]\n\n    const classesLiked = ['not-liked']\n    const classesFavorites = ['not-favorites']\n\n    if (likedTask) {\n        classesLiked.push('liked')\n    }\n\n    if (favoritesTask) {\n        classesFavorites.push('favorites')\n    }\n\n    return (\n        <li\n            onDoubleClick={() => {\n                props.onChangeTask([\n                    {_id, fieldKey: 'liked', fieldValue: likedTask}\n                ])\n                setLikedTask(!likedTask)\n            }}\n            className=\"task-item\">\n            <span>\n                {numberItem}\n            </span>\n            <span className=\"task-title\">\n                {title}\n            </span>\n            <div className=\"task-info\">\n                <span>\n                    {\n                        status\n                        ? <p>Выполнено</p>\n                        : <p>Не выполнено</p>\n                    }\n                </span>\n                <span\n                    className={classesFavorites.join(' ')}\n                    onClick={() => {\n                        props.onChangeTask([\n                            {_id, fieldKey: 'favorites', fieldValue: favoritesTask}\n                        ])\n                        setFavoritesTask(!favoritesTask)\n                    }}\n                >\n                    {\n                        favoritesTask\n                        ? <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n                            </svg>\n                        : <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fill-rule=\"evenodd\"\n                                      d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\n                            </svg>\n                    }\n                </span>\n                <span\n                    className={classesLiked.join(' ')}\n\n                >\n                    {\n                        likedTask\n                        ? <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                height=\"24px\"\n                                viewBox=\"0 0 24 24\"\n                                width=\"24px\"\n                                fill=\"#000000\"\n                                onClick={() => {\n                                    props.onChangeTask([\n                                        {_id, fieldKey: 'liked', fieldValue: likedTask}\n                                    ])\n                                    setLikedTask(!likedTask)\n                                }}\n                            >\n                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                        </svg>\n                        : <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\n                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                <path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"/>\n                        </svg>\n                    }\n                </span>\n            </div>\n        </li>\n    )\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onChangeTask: fieldChange => dispatch(changeTask(fieldChange))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TaskItem)\n","import axios from \"axios\"\nimport {CHANGE_TASK_ERROR} from \"./actionType\";\n\nexport function changeTask(props) {\n    return async dispatch => {\n        try {\n            await axios.post('/api/task-change', props)\n\n        } catch (err) {\n            dispatch(changeTaskError(err))\n        }\n    }\n}\n\nexport function changeTaskError(error) {\n    return {\n        type: CHANGE_TASK_ERROR,\n        error\n    }\n}\n","import {connect} from \"react-redux\"\n\nimport {useEffect} from \"react\"\n\nimport './TaskList.scss'\nimport { fetchTasks } from \"../../../store/actions/task\"\n\nimport TaskItem from \"../../../components/TaskItem/TaskItem\"\n\nfunction TaskList(props) {\n\n    useEffect(() => {\n        props.onFetchTasks('all')\n    }, [])\n\n    const renderTasks = () => {\n        if (!props.loading) {\n\n            return props.tasks.tasks.map((item, i) => {\n                return <TaskItem key={item._id} data={[item, i + 1]}/>\n            })\n        }\n    }\n\n    return (\n        <ul className='task-list'>\n            {\n                props.tasks.loading\n                ? <h1>Loading</h1>\n                : renderTasks()\n            }\n        </ul>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tasks: state.tasks\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onFetchTasks: criteria => dispatch(fetchTasks(criteria))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)\n","// Импорт стилей\nimport './Tasks.scss'\n\n// Импорт компонентов\nimport TaskList from \"../../containers/Tasks/TasksList/TaskList\";\n\n// Страница Tasks\nexport default function tasks() {\n    return (\n        <div className=\"task-list-container\">\n            <TaskList />\n        </div>\n    )\n}\n","import './Questionnaire.scss'\n\n// Страница Questionnaire\nexport default function questionnaire() {\n    return (\n        <div>\n            <h1>Questionnaire</h1>\n        </div>\n    )\n}\n","\nexport default function Registration() {\n\n    return (\n        <div>\n            Registr\n        </div>\n    )\n}\n","export const ADD = 'ADD'\nexport const SUB = 'SUB'\nexport const ADD_NUMBER = 'ADD_NUMBER'\nexport const ADD2 = 'ADD2'\n","// Файл action creater\n\nimport {ADD, ADD2, ADD_NUMBER, SUB} from \"./actionTypes\";\n\nexport function add() {\n    return {\n        type: ADD\n    }\n}\n\nexport function sub() {\n    return {\n        type: SUB\n    }\n}\n\nexport function addNumber(number) {\n    return {\n        type: ADD_NUMBER,\n        payload: number\n    }\n}\n\nexport function add2(number) {\n    return {\n        type: ADD2,\n        payload: number\n    }\n}\n\nexport function asyncAdd(number) {\n    return (dispatch) =>  {\n        setTimeout(() => {\n            dispatch(add2(number))\n        }, 3000)\n    }\n}\n\n","import {connect} from 'react-redux'\n\nimport {Component} from \"react\";\nimport {add2, asyncAdd} from \"../../redux/actions/actions\";\n\nclass Counter extends Component {\n    render() {\n        return (\n            <div style={{padding: 20, border: '1px solid #ccc'}}>\n                <h1>Counter {this.props.counter}</h1>\n                <hr/>\n                <div>\n                    <button\n                        onClick={() => this.props.onChange(1)}\n                    >\n                        Add\n                    </button>\n                    <button\n                        onClick={() => this.props.onChange(-1)}\n                    >\n                        Sub\n                    </button>\n                </div>\n\n                {/*Async changes state*/}\n                <div>\n                    <button\n                        onClick={() => this.props.onAsyncAdd(100)}\n                    >\n                        Ассинхронно добавить 100\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        counter: state.counter2.counter2\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onChange: number => dispatch(add2(number)),\n        onAsyncAdd: number => dispatch(asyncAdd(number))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n","// import { useSelector, useDispatch } from 'react-redux'\nimport { connect } from \"react-redux\"\n\nimport Counter from \"../../components/CounterPracticeReduxe/Counter\";\nimport {add, addNumber, sub} from \"../../redux/actions/actions\";\n\nfunction mapStateToProps(state) {\n    return {\n        counter: state.counter1.counter\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onAdd: () => dispatch({type: 'ADD'}),\n        // onSub: () => dispatch({type: 'SUB'}),\n        // onAddNumber: number => dispatch({ type: 'ADD_NUMBER', payload: number })\n        onAdd: () => dispatch(add()),\n        onSub: () => dispatch(sub()),\n        onAddNumber: number => dispatch(addNumber(number))\n    }\n}\n\n// Страница Practice Redux\nfunction PracticeRedux(props) {\n\n    return (\n        <div className=\"practice-redux-page\">\n            <h2>Счетчик: {props.counter}</h2>\n            <hr/>\n            <div className=\"Actions\">\n                <button\n                    onClick={props.onAdd}\n                >\n                    Добавить 1\n                </button>\n                <button\n                    onClick={props.onSub}\n                >\n                    Вычесть 1\n                </button>\n            </div>\n            <div className=\"Actions\">\n                <button\n                    onClick={props.onAddNumber.bind(this, 15)}\n                >\n                    Добавить 15\n                </button>\n                <button\n                    onClick={() => props.onAddNumber(-17)}\n                >\n                    Вычесть 17\n                </button>\n            </div>\n\n            <Counter />\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PracticeRedux)\n","// Импорт стилей\nimport './assets/style/main.scss'\n\nimport { Switch, Route } from 'react-router-dom'\n\n// Импорт Layout\nimport MainLayout from \"./hoc/Layout/MainLayout/MainLayout\"\n\n// Импорт компонентов\nimport NavBar from \"./containers/Nav_Bar/Nav_Bar\"\nimport ModalPanelUser from \"./components/ModalPanelUsers/ModalPanelUser\"\n\n// Импорт страниц приложения\nimport Home from './pages/Home/Home'\nimport Tasks from './pages/Tasks/Tasks'\nimport Questionnaire from './pages/Questionnaire/Questionnaire'\nimport Registration from \"./pages/Registration/Registration\"\nimport PracticeRedux from './pages/PracticeRedux/PracticeRedux'\n\nimport {useState} from \"react\";\n\nfunction App() {\n\n    // Hooks\n    const [activePanelUser, setActivePanelUser] = useState(false)\n\n    function onActivePanelUser() {\n        setActivePanelUser(!activePanelUser)\n    }\n\n    return (\n        <MainLayout>\n            <NavBar\n                onActivePanelUser={onActivePanelUser}\n                activePanelUser={activePanelUser}\n            />\n            <ModalPanelUser\n                activePanelUser={activePanelUser}\n            />\n\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/tasks\">\n                    <Tasks />\n                </Route>\n                <Route path=\"/questionnaire\">\n                    <Questionnaire />\n                </Route>\n                <Route path=\"/registration\">\n                    <Registration />\n                </Route>\n                <Route path=\"/practiceredux\">\n                    <PracticeRedux />\n                </Route>\n            </Switch>\n        </MainLayout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD, ADD_NUMBER, SUB} from \"../actions/actionTypes\";\n\nconst initialState = {\n    counter: 0\n}\n\nexport default function counter1(state = initialState, action) {\n    switch(action.type) {\n        case ADD:\n            return {\n                counter: state.counter + 1\n            }\n        case SUB:\n            return {\n                counter: state.counter - 1\n            }\n        case ADD_NUMBER:\n            return {\n                counter: state.counter + action.payload\n            }\n        default:\n            break\n    }\n\n    return state\n}\n","import {ADD2} from \"../actions/actionTypes\";\n\nconst initialState = {\n    counter2: 2000\n}\n\nexport default function counter2(state = initialState, action) {\n    switch(action.type) {\n        case ADD2:\n            return {\n                counter2: state.counter2 + action.payload\n            }\n        // case 'SUB':\n        //     return {\n        //         counter: state.counter - 1\n        //     }\n        // case 'ADD_NUMBER':\n        //     return {\n        //         counter: state.counter + action.payload\n        //     }\n        default:\n            return state\n    }\n\n    return state\n}\n","// Инициализированное состояние\nimport {\n    FETCH_TASKS_ERROR,\n    FETCH_TASKS_START,\n    FETCH_TASKS_SUCCESS\n} from \"../actions/actionType\";\n\nconst initialState = {\n    tasks: [],\n    loading: true,\n    error: null\n}\n\nexport default function fetchTasks(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_TASKS_START:\n            return {\n                tasks: state, loading: true\n            }\n        case FETCH_TASKS_SUCCESS:\n            return {\n                tasks: [...action.tasks], loading: false\n            }\n        case FETCH_TASKS_ERROR:\n            return {\n                tasks: [...state], loading: false, error: action.error\n            }\n        default:\n            return state\n    }\n}\n","// Метод для объединения нескольких reduce\nimport { combineReducers } from 'redux'\n\n\nimport counter1 from \"../redux/reducers/counter1\"\nimport counter2 from \"../redux/reducers/counter2\"\nimport fetchTasks from \"./reducers/task\";\n\n// Прописываем, какие reduce должны быть объеденены\nexport default combineReducers ({\n    tasks: fetchTasks,\n    counter1,\n    counter2\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from \"./store/rootReducer\";\n\n// Метод для работы с middleware в Redux\n// import { applyMiddleware } from 'redux'\n\n// Middleware\n// logger - который следит за изменениями в сторе\n// function loggerMiddleware(store) {\n//     return function (next) {\n//         return function (action) {\n//             const result = next(action)\n//             console.log('Middleware', store.getState())\n//             return result\n//         }\n//     }\n// }\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n// es6 logger\nconst loggerMiddleware = store => next => action => {\n    const result = next(action)\n    console.log('Middleware', store.getState())\n    return result\n}\n\n// Инициализация store для приложения\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(\n//     loggerMiddleware,\n//     reduxThunk\n// )))\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(\n    loggerMiddleware,\n    reduxThunk\n)))\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}